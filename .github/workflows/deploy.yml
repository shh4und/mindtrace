name: Build and Deploy to AWS

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  BACKEND_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/mindtrace-backend
  FRONTEND_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/mindtrace-frontend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build & Push backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ env.BACKEND_IMAGE }}:latest
            ${{ env.BACKEND_IMAGE }}:${{ github.sha }}

      - name: Build & Push frontend
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          # FRONTEND_API_BASE_URL deve ser definido nos Secrets; fallback para http://localhost:8080/api/v1
          build-args: |
            VITE_API_BASE_URL=${{ secrets.FRONTEND_API_BASE_URL || 'http://localhost:8080/api/v1' }}
          tags: |
            ${{ env.FRONTEND_IMAGE }}:latest
            ${{ env.FRONTEND_IMAGE }}:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
            host: ${{ secrets.EC2_HOST }}
            username: ${{ secrets.EC2_USER }}
            key: ${{ secrets.EC2_SSH_KEY }}
            script: |
              set -e
              cd /home/ubuntu/mindtrace || exit 1
              git fetch origin main
              git reset --hard origin/main
              # Criar/atualizar .env.prod se ainda não existir (NÃO sobrescreve se já existe)
              if [ ! -f .env.prod ]; then
                echo "Arquivo .env.prod ausente - crie manualmente no servidor."
                exit 1
              fi
              DOCKER_HUB_USERNAME=${{ secrets.DOCKER_HUB_USERNAME }} \
              docker compose -f docker-compose.prod.yml --env-file .env.prod pull
              DOCKER_HUB_USERNAME=${{ secrets.DOCKER_HUB_USERNAME }} \
              docker compose -f docker-compose.prod.yml --env-file .env.prod up -d --remove-orphans
              docker image prune -f