
services:
  db:
    image: postgres:17-alpine
    container_name: mindtrace-db
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin-server
    ports:
      - "8001:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_LISTEN_ADDRESS=0.0.0.0
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin
    depends_on:
      - db

  backend:
    container_name: mindtrace-backend
    # Dev: use golang image, mount source and run with hot reload / go run
    image: golang:1.24.5-alpine
    working_dir: /app
    volumes:
      - ./backend:/app
      - /app/pkg/mod
    ports:
      - "8080:8080"
    environment:
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_DB=${POSTGRES_DB}
      - JWT_SECRET=${JWT_SECRET}
    command: sh -c "apk add --no-cache git && go mod download && go run ./cmd/api/main.go"
    depends_on:
      - db
    restart: unless-stopped

    # Production build (uncomment to use):
    # build:
    #   context: ./backend

  frontend:
    container_name: mindtrace-frontend
    # Dev: use node image, mount source and run Vite dev server (hot reload)
    image: node:22.17.1-alpine
    working_dir: /app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: sh -c "npm install --silent && npm run dev -- --host 0.0.0.0"
    ports:
      - "5173:5173"
    depends_on:
      - backend
    restart: unless-stopped

    # Production build (uncomment to use):
    # build:
    #   context: ./frontend
    #   ports:
    #     - "8000:80"

volumes:
  postgres-data:
  pgadmin-data:
